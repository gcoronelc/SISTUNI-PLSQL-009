CREATE OR REPLACE PACKAGE BODY LOGISTICA.PKG_CRUD_TIENDA AS 

 PROCEDURE SP_INS_TIENDA(
    P_TIENOM       IN LOGISTICA.TIENDA.TIENOM%TYPE,
    P_TIEADMPAT    IN LOGISTICA.TIENDA.TIEADMPAT%TYPE,
    P_TIEADMMAT           IN LOGISTICA.TIENDA.TIEADMMAT%TYPE,
    P_TIEADMNOM           IN LOGISTICA.TIENDA.TIEADMNOM%TYPE,
    P_TIEDIR           IN LOGISTICA.TIENDA.TIEDIR%TYPE
  )
  AS
    v_cont number;
    v_exception1 EXCEPTION;
  BEGIN

  --Valida nombre de tienda

    SELECT count(1) INTO v_cont
        FROM LOGISTICA.TIENDA
        WHERE UPPER(REPLACE(TIENOM,' ','')) = UPPER(REPLACE(P_TIENOM,' ',''));

    IF v_cont =1 then
        RAISE v_exception1;
    END IF;

    INSERT INTO LOGISTICA.TIENDA(ID_TIENDA, TIENOM  , TIEADMPAT  , TIEADMMAT  , TIEADMNOM  , TIEDIR  , TIEEST , TIEFECINI)  
    VALUES   (LOGISTICA.TIENDA_seq.NEXTVAL, P_TIENOM, P_TIEADMPAT, P_TIEADMMAT, P_TIEADMNOM, P_TIEDIR, '01'   , SYSDATE  );
    COMMIT; 
  EXCEPTION

    WHEN v_exception1 THEN
        RAISE_APPLICATION_ERROR(-20000, 'NOMBRE DE TIENDA YA REGISTRADO');

    WHEN OTHERS THEN 
        DBMS_OUTPUT.put_line(SQLERRM);

     

  END SP_INS_TIENDA;


 PROCEDURE SP_UPD_TIENDA(
    P_ID_TIENDA        IN LOGISTICA.TIENDA.ID_TIENDA%TYPE,
    P_TIENOM       IN LOGISTICA.TIENDA.TIENOM%TYPE,
    P_TIEADMPAT    IN LOGISTICA.TIENDA.TIEADMPAT%TYPE,
    P_TIEADMMAT           IN LOGISTICA.TIENDA.TIEADMMAT%TYPE,
    P_TIEADMNOM           IN LOGISTICA.TIENDA.TIEADMNOM%TYPE,
    P_TIEDIR           IN LOGISTICA.TIENDA.TIEDIR%TYPE
  )
  AS
  BEGIN

    UPDATE LOGISTICA.TIENDA
    SET
      TIENOM    = P_TIENOM, 
      TIEADMPAT = P_TIEADMPAT, 
      TIEADMMAT = P_TIEADMMAT, 
      TIEADMNOM = P_TIEADMNOM,
      TIEDIR    = P_TIEDIR
    WHERE ID_TIENDA = P_ID_TIENDA; 

     COMMIT; 
  EXCEPTION

    WHEN OTHERS THEN 
        DBMS_OUTPUT.put_line(SQLERRM);

     

  END SP_UPD_TIENDA;

  PROCEDURE SP_DEL_TIENDA(
    P_ID_TIENDA        IN LOGISTICA.TIENDA.ID_TIENDA%TYPE
  )
  AS
  BEGIN

    UPDATE LOGISTICA.TIENDA SET TIEEST='00' WHERE ID_TIENDA=P_ID_TIENDA;
    COMMIT;
  EXCEPTION

    WHEN OTHERS THEN 
        DBMS_OUTPUT.put_line(SQLERRM);

     

  END SP_DEL_TIENDA;

  PROCEDURE SP_LISTAR_TIENDA(
    P_CURSOR OUT NOCOPY SYS_REFCURSOR
  )
  AS
  BEGIN

    OPEN P_CURSOR FOR
    SELECT *  
    FROM LOGISTICA.TIENDA;

  END SP_LISTAR_TIENDA;

END PKG_CRUD_TIENDA;
/

